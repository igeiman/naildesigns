# amplify/backend/api/photo-albums/schema.graphql

# type Album @model @auth(rules: [
# 	{allow: owner}
# 	{ allow: owner, ownerField: "members", queries: [get, list], mutations: null }
#	])



type Album @model {
    id: ID!
    name: String!
	description: String
    photos: [Photo] @connection(name: "AlbumPhotos")
}

type Photo @model(subscriptions: null)  @searchable {
    id: ID!
    album: Album @connection(name: "AlbumPhotos")
    bucket: String!
    fullsize: PhotoS3Info!
    thumbnail: PhotoS3Info!
    labels: [String!]
	comments: [Comment] @connection(name: "CommentsPhoto")
	score: Int,
	owner: String,
	createdAt: AWSTimestamp,
	photoAlbumId: ID
}

type PhotoS3Info {
    key: String!
    width: Int!
    height: Int!
}

type Comment @model(subscriptions: null)  @searchable {
	id: ID!
	photo: Photo @connection(name: "CommentsPhoto")
    text: String!
    Sentiment: String
	commentPhotoId: ID
	SentimentScorePositive: Float
	SentimentScoreNegative: Float
	SentimentScoreNeutral: Float
}

type Subscription {
    upload(id: String!): Label
    	@aws_subscribe(mutations: ["labeled"])
	onPhotoUploadDelete(photoAlbumId: ID): Photo
		@aws_subscribe(mutations: ["createPhoto","deletePhoto"])
	onCreateComment(commentPhotoId: ID): Comment
		@aws_subscribe(mutations: ["createComment","deleteComment"])
}

type Mutation {
    labeled( photoid: String!): Label!
}

type Label {
    label: String!
}

