# amplify/backend/api/photo-albums/schema.graphql

# type Album @model @auth(rules: [
# 	{allow: owner}
# 	{ allow: owner, ownerField: "members", queries: [get, list], mutations: null }
#	])



type Album @model {
    id: ID!
    name: String!
	description: String
    photos: [Photo] @connection(name: "AlbumPhotos")
}

type Photo @model  @searchable {
    id: ID!
    album: Album @connection(name: "AlbumPhotos")
    bucket: String!
    fullsize: PhotoS3Info!
    thumbnail: PhotoS3Info!
    labels: [String!]
	comments: [Comment] @connection(name: "CommentsPhoto")
	score: Int,
	owner: String,
	createdAt: AWSTimestamp
}

type PhotoS3Info {
    key: String!
    width: Int!
    height: Int!
}

type Comment @model  @searchable {
	id: ID!
	photo: Photo @connection(name: "CommentsPhoto")
    text: String!
    sentiment: String
}

type Subscription {
    upload(id: String!): Label
    	@aws_subscribe(mutations: ["labeled"])
	onPhotoUploadDelete: Photo
		@aws_subscribe(mutations: ["createPhoto","deletePhoto"])
}

type Mutation {
    labeled( photoid: String!): Label!
	uploadPhoto(albumId: ID!, action: String): Photo,
	uploadPhotoLocal(albumId: ID!, action: String): Photo
}

type Label {
    label: String!
}

